FAIL
Kernel panic in file system extraction run: PANIC at ../../devices/disk.c:436 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0xc01078fc 0xc0104bfa 0xc0104f80 0xc010f21d 0xc010e99e 0xc010d85a 0xc010c02d 0xc0101ced 0xc0101e1f 0x804a87a 0x80480c1 0x8048496 0x804854a 0x804869a 0x8048e84
Translation of call stack:
0xc01078fc: debug_panic (.../../lib/kernel/debug.c:34)
0xc0104bfa: select_sector (.../../../devices/disk.c:437)
0xc0104f80: disk_read (.../../../devices/disk.c:230)
0xc010f21d: buffer_cache_write (...../../filesys/cache.c:146)
0xc010e99e: inode_write_at (...../../filesys/inode.c:399)
0xc010d85a: file_write (...d/../../filesys/file.c:99)
0xc010c02d: syscall_handler (...../userprog/syscall.c:224)
0xc0101ced: intr_handler (..../threads/interrupt.c:361)
0xc0101e1f: intr_entry (threads/intr-stubs.S:38)
0x0804a87a: (unknown)
0x080480c1: (unknown)
0x08048496: (unknown)
0x0804854a: (unknown)
0x0804869a: (unknown)
0x08048e84: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
